package ${packageName};

import au.com.easygoingapps.observers.EditTextObservers.*;
import au.com.easygoingapps.observers.CheckBoxObservers.*;
import au.com.easygoingapps.observers.ImageViewObservers.*;

import android.app.Activity;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.view.View;

import utils.Observer;
import utils.State;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.HashMap;

public class ${className}ViewBinding
{
     private static ArrayList<State> states;
     private static ArrayList<Observer> observers;

     public static void watch(Activity activity)
     {
        states = new ArrayList<>();
        observers = new ArrayList();

        HashMap<Integer, String> stateMap = new HashMap<Integer, String>();
        String mappings = ${mappings};
        mappings = mappings.substring(1, mappings.length() - 1);
        String[] values = mappings.split(",");
        for(String value : values)
        {
          String[] map = value.trim().split("=");
          stateMap.put(Integer.valueOf(map[0]), map[1]);
        }

        for(Integer viewId : stateMap.keySet())
        {
            String name = stateMap.get(viewId);
            try
            {
                Field field = activity.getClass().getField(name);
                View view = activity.findViewById(viewId);

                Observer observer = null;
                if(view instanceof EditText)
                {
                  State<String> value = (State<String>) field.get(activity);
                  states.add(value);

                  EditText editText = (EditText) view;
                  editText.addTextChangedListener(new EditTextBinder(value));

                  observer = new EditTextObserver(editText, value);
                  value.addObserver(observer);
                  value.setValue(value.getValue());
                }
                else if(view instanceof CheckBox)
                {
                  State<Boolean> value = (State<Boolean>) field.get(activity);
                  states.add(value);

                  CheckBox checkbox = (CheckBox) view;
                  checkbox.setOnCheckedChangeListener(new CheckboxBinder(value));

                  observer = new CheckboxObserver(checkbox, value);
                  value.addObserver(observer);
                  value.setValue(value.getValue());
                }
                else if(view instanceof ImageView)
                {
                  State<Integer> value = (State<Integer>) field.get(activity);
                  states.add(value);

                  ImageView imageView = (ImageView) view;
                  observer = new ImageViewObserver(imageView);
                  value.addObserver(observer);
                  value.setValue(value.getValue());
                }

                observers.add(observer);
            }
            catch(NoSuchFieldException | IllegalAccessException e)
            {
                e.printStackTrace();
            }
        }
     }
}
